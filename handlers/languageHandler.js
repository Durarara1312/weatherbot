const database = require('../database');
const localization = require('../utils/localization');
const menuHandler = require('./menuHandler');

module.exports = {
    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
     * @param {TelegramBot} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞
     * @param {number} chatId - ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async sendLanguageMenu(bot, chatId) {
        const selectLanguagePrompt = await localization.getLocaleText(chatId, 'select_language_prompt');
        const keyboard = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–†—É—Å—Å–∫–∏–π üá∑üá∫', callback_data: 'set_language_ru' }],
                    [{ text: 'English üá¨üáß', callback_data: 'set_language_en' }],
                    [{ text: 'Espa√±ol üá™üá∏', callback_data: 'set_language_es' }],
                    [{ text: 'Fran√ßais üá´üá∑', callback_data: 'set_language_fr' }],
                    [{ text: 'Deutsch üá©üá™', callback_data: 'set_language_de' }]
                ]
            }
        };
        bot.sendMessage(chatId, selectLanguagePrompt, keyboard);
    },

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫—É —è–∑—ã–∫–∞
     * @param {TelegramBot} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram-–±–æ—Ç–∞
     * @param {Object} query - CallbackQuery –æ—Ç Telegram
     * @param {string} language - –ö–æ–¥ —è–∑—ã–∫–∞ ('ru', 'en', 'es', 'fr', 'de')
     */
    handleSetLanguage(bot, query, language) {
        const chatId = query.message.chat.id;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—à–∏–±–∫–∏
        const successMessageKey = `language_changed_${language}`;
        const errorMessageKey = `language_change_error_${language}`;

        database.setUserLanguage(chatId, language, async (err) => {
            if (err) {
                console.error(err.message);
                const errorMessage = await localization.getLocaleText(chatId, errorMessageKey);
                bot.sendMessage(chatId, errorMessage);
                return;
            }

            const successMessage = await localization.getLocaleText(chatId, successMessageKey);
            bot.sendMessage(chatId, successMessage);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞
            const keyboard = await menuHandler.getMainMenuKeyboard(chatId);
            const mainMenuMessage = await localization.getLocaleText(chatId, 'main_menu_message');
            bot.sendMessage(chatId, mainMenuMessage, keyboard);
        });
    }
};